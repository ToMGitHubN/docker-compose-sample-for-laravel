version: '3'
services:

  mysql:
    image: mysql:8.0.20
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --block-encryption-mode=AES-256-CBC
    environment:
      MYSQL_ROOT_PASSWORD: mysql_root_password
      MYSQL_DATABASE: main_database
      MYSQL_USER: mysql_user
      MYSQL_PASSWORD: mysql_user_password
    ports:
      - 3306:3306
    container_name: develop_mysql

  test_mysql:
      image: mysql:8.0.20
      command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin
      environment:
        MYSQL_USER: test_mysql_user
        MYSQL_PASSWORD: test_mysql_user_password
        MYSQL_DATABASE: test_mysql_database
        MYSQL_ROOT_PASSWORD: test_mysql_root_password
      container_name: test_develop_mysql

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"

  mail:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
      - "1025:1025"

  # S3 storage
  minio:
    image: minio/minio:latest
    ports:
      - 9000:9000
    #volumes:
    #  - minio:/data
    command: server /data
    environment:
      MINIO_ACCESS_KEY: minio_access_key
      MINIO_SECRET_KEY: minio_secret_key

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://minio:9000 minio_access_key minio_secret_key) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb myminio/local.bucketname-hoge.com;
      /usr/bin/mc policy set public myminio/local.bucketname-hoge.com;
      /usr/bin/mc policy download myminio/local.bucketname-hoge.com;
      exit 0;
      "

  https-portal:
    image: steveltn/https-portal:1
    ports:
      - 80:80
      - 443:443
    links:
      - web
    restart: always
    environment:
      DOMAINS: 'public -> http://dockerhost:8080'
      STAGE: local
    volumes:
      - ./org-chimata-ssl-certs:/var/lib/https-portal


  web:
    build: ./docker_setting/php-apache
    volumes:
      - ./develop:/var/www/html/public
    ports:
      - 8080:80
      - 8081:81
      - 8082:82
    depends_on:
      - mysql
      - test_mysql
    environment:
      TEST_DB_HOST: test_mysql
      TEST_DB_PORT: 3306
      TEST_DB_DATABASE: test_mysql_database
      TEST_DB_USERNAME: test_mysql_user
      TEST_DB_PASSWORD: test_mysql_user_password
    container_name: develop_php_server
